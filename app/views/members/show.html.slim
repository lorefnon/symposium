#member_profile_wrapper.container-fluid
  = render :partial => "members/nav", :active => "profile"
  .row-fluid
    .span4.member-box.col-vbox
      .member-intro
        h2 About
        = member_box @inst
        - unless current_user.nil?
          = subscription_form @inst
        .member-tdur
          |has been a member of Symposium since :
          span.time-dur
            = @inst.created_at.strftime("%B %d, %Y")
        .priv-tags
          ul
            - @inst.tag_priviledges.each do |tp|
              li
                .tag.badge.badge-inverse= tp.tag.name

      .member-details
        - if not current_user.nil? and current_user.can_update? @inst
          .profile
            h2 Profile
            #edit_options
              = link_to "Edit Your profile",{:controller => :members, :action => :edit}

            ul.profile-info-list
              - [:email, :address, :city, :zip, :country, :gender].each do |item|
                - val = @inst.send(item)
                - unless val.nil? or val.empty?
                  li.profile-info-item
                    h3= item.to_s
                    p = @inst.send(item)
      .subscriptions
        /- if not current_user.nil? and current_user.id == @inst.id
        a href="/members/#{@inst.id}/subscriptions"
          | Manage Subscriptions

    .asked-que-box.span4.col-vbox
      h2 Asked Questions
      ul.asked-que-list
         - @inst.questions_asked.each do |que|
           li.asked-que-item
             span.badge.que-upvotes
               = que.upvotes.length
               |  &uarr;
             span.badge.que-downvotes
               = que.downvotes.length
               |  &darr;

             a href="/questions/#{que.id}.html" = que.title

    .repl-ans-box.span4.col-vbox
      h2 Contributed Answers
      ul.repl-ans-list
        - @inst.answers_provided.each do |ans|
          li.ans-item
            .ans-que-wrapper
              span.badge.que-upvotes
                = ans.question.upvotes.length
                |  &uarr;
              span.badge.que-downvotes
                = ans.question.downvotes.length
                |  &darr;

              a href="/answers/#{ans.id}.html"
                = ans.question.title
            .ans-ans-wrapper
              span.badge.ans-upvotes
                = ans.upvotes.length
                | &uarr;
              span.badge.ans-downvotes
                = ans.downvotes.length
                | &darr;

              a.ans-short href="#"
                == "#{strip_tags(ans.body)[0...140]} ..."
